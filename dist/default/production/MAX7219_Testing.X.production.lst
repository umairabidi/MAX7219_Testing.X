

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jul 15 17:43:35 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F616
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 09/02/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F616 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0007                     	;# 
    52     000A                     	;# 
    53     000B                     	;# 
    54     000C                     	;# 
    55     000E                     	;# 
    56     000E                     	;# 
    57     000F                     	;# 
    58     0010                     	;# 
    59     0011                     	;# 
    60     0012                     	;# 
    61     0013                     	;# 
    62     0013                     	;# 
    63     0014                     	;# 
    64     0015                     	;# 
    65     0016                     	;# 
    66     0017                     	;# 
    67     0019                     	;# 
    68     001A                     	;# 
    69     001B                     	;# 
    70     001C                     	;# 
    71     001E                     	;# 
    72     001F                     	;# 
    73     0081                     	;# 
    74     0085                     	;# 
    75     0087                     	;# 
    76     008C                     	;# 
    77     008E                     	;# 
    78     0090                     	;# 
    79     0091                     	;# 
    80     0092                     	;# 
    81     0095                     	;# 
    82     0095                     	;# 
    83     0096                     	;# 
    84     0096                     	;# 
    85     0099                     	;# 
    86     0099                     	;# 
    87     009A                     	;# 
    88     009E                     	;# 
    89     009F                     	;# 
    90     0007                     _PORTCbits	set	7
    91     0091                     _ANSEL	set	145
    92     0087                     _TRISCbits	set	135
    93                           
    94                           	psect	cinit
    95     07FE                     start_initialization:	
    96                           ; #config settings
    97                           
    98     07FE                     __initialization:
    99     07FE                     end_of_initialization:	
   100                           ;End of C runtime variable initialization code
   101                           
   102     07FE                     __end_of__initialization:
   103     07FE  0183               	clrf	3
   104     07FF  2F5E               	ljmp	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMMON
   107     0070                     __pcstackCOMMON:
   108     0070                     ?_SPI_send:
   109     0070                     ?_main:	
   110                           ; 1 bytes @ 0x0
   111                           
   112     0070                     SPI_send@data:	
   113                           ; 2 bytes @ 0x0
   114                           
   115                           
   116                           ; 1 bytes @ 0x0
   117     0070                     	ds	1
   118     0071                     ??_SPI_send:
   119                           
   120                           ; 1 bytes @ 0x1
   121     0071                     	ds	1
   122     0072                     SPI_send@addr:
   123                           
   124                           ; 1 bytes @ 0x2
   125     0072                     	ds	1
   126     0073                     SPI_send@i:
   127                           
   128                           ; 2 bytes @ 0x3
   129     0073                     	ds	2
   130     0075                     ??_main:
   131                           
   132                           ; 1 bytes @ 0x5
   133     0075                     	ds	3
   134                           
   135                           	psect	maintext
   136     075E                     __pmaintext:	
   137 ;;
   138 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   139 ;;
   140 ;; *************** function _main *****************
   141 ;; Defined at:
   142 ;;		line 34 in file "MAX7219_main.c"
   143 ;; Parameters:    Size  Location     Type
   144 ;;		None
   145 ;; Auto vars:     Size  Location     Type
   146 ;;  i               2    0        int 
   147 ;; Return value:  Size  Location     Type
   148 ;;                  2   14[None  ] int 
   149 ;; Registers used:
   150 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   151 ;; Tracked objects:
   152 ;;		On entry : B00/0
   153 ;;		On exit  : 100/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMMON   BANK0   BANK1
   156 ;;      Params:         0       0       0
   157 ;;      Locals:         0       0       0
   158 ;;      Temps:          3       0       0
   159 ;;      Totals:         3       0       0
   160 ;;Total ram usage:        3 bytes
   161 ;; Hardware stack levels required when called: 1
   162 ;; This function calls:
   163 ;;		_SPI_send
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169     075E                     _main:	
   170                           ;psect for function _main
   171                           
   172                           
   173                           ;MAX7219_main.c: 36: TRISCbits.TRISC2 = 0;
   174                           
   175                           ;incstack = 0
   176                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   177     075E  1683               	bsf	3,5	;RP0=1, select bank1
   178     075F  1107               	bcf	7,2	;volatile
   179                           
   180                           ;MAX7219_main.c: 37: TRISCbits.TRISC1 = 0;
   181     0760  1087               	bcf	7,1	;volatile
   182                           
   183                           ;MAX7219_main.c: 38: TRISCbits.TRISC0 = 0;
   184     0761  1007               	bcf	7,0	;volatile
   185                           
   186                           ;MAX7219_main.c: 39: ANSEL = 0;
   187     0762  0191               	clrf	17	;volatile
   188                           
   189                           ;MAX7219_main.c: 41: PORTCbits.RC0 = 0;
   190     0763  1283               	bcf	3,5	;RP0=0, select bank0
   191     0764  1007               	bcf	7,0	;volatile
   192                           
   193                           ;MAX7219_main.c: 42: PORTCbits.RC1 = 1;
   194     0765  1487               	bsf	7,1	;volatile
   195                           
   196                           ;MAX7219_main.c: 43: PORTCbits.RC2 = 0;
   197     0766  1107               	bcf	7,2	;volatile
   198                           
   199                           ;MAX7219_main.c: 45: int i;;MAX7219_main.c: 46: _delay((unsigned long)((4000)*(8000000/4
      +                          000.0)));
   200     0767  3029               	movlw	41
   201     0768  00F7               	movwf	??_main+2
   202     0769  3096               	movlw	150
   203     076A  00F6               	movwf	??_main+1
   204     076B  307F               	movlw	127
   205     076C  00F5               	movwf	??_main
   206     076D                     u137:
   207     076D  0BF5               	decfsz	??_main,f
   208     076E  2F6D               	goto	u137
   209     076F  0BF6               	decfsz	??_main+1,f
   210     0770  2F6D               	goto	u137
   211     0771  0BF7               	decfsz	??_main+2,f
   212     0772  2F6D               	goto	u137
   213                           
   214                           ;MAX7219_main.c: 47: SPI_send(0x0F,0x00);
   215     0773  01F0               	clrf	SPI_send@data
   216     0774  300F               	movlw	15
   217     0775  279B               	fcall	_SPI_send
   218                           
   219                           ;MAX7219_main.c: 49: SPI_send(0x09,0xFF);
   220     0776  30FF               	movlw	255
   221     0777  00F0               	movwf	SPI_send@data
   222     0778  3009               	movlw	9
   223     0779  279B               	fcall	_SPI_send
   224                           
   225                           ;MAX7219_main.c: 50: SPI_send(0x0A,0x03);
   226     077A  3003               	movlw	3
   227     077B  00F0               	movwf	SPI_send@data
   228     077C  300A               	movlw	10
   229     077D  279B               	fcall	_SPI_send
   230                           
   231                           ;MAX7219_main.c: 51: SPI_send(0x0B,0x07);
   232     077E  3007               	movlw	7
   233     077F  00F0               	movwf	SPI_send@data
   234     0780  300B               	movlw	11
   235     0781  279B               	fcall	_SPI_send
   236                           
   237                           ;MAX7219_main.c: 52: SPI_send(0x0C,0x01);
   238     0782  01F0               	clrf	SPI_send@data
   239     0783  0AF0               	incf	SPI_send@data,f
   240     0784  300C               	movlw	12
   241     0785  279B               	fcall	_SPI_send
   242                           
   243                           ;MAX7219_main.c: 54: SPI_send(0x01,0x86);
   244     0786  3086               	movlw	134
   245     0787  00F0               	movwf	SPI_send@data
   246     0788  3001               	movlw	1
   247     0789  279B               	fcall	_SPI_send
   248                           
   249                           ;MAX7219_main.c: 55: SPI_send(0x02,0x85);
   250     078A  3085               	movlw	133
   251     078B  00F0               	movwf	SPI_send@data
   252     078C  3002               	movlw	2
   253     078D  279B               	fcall	_SPI_send
   254                           
   255                           ;MAX7219_main.c: 56: SPI_send(0x03,0x84);
   256     078E  3084               	movlw	132
   257     078F  00F0               	movwf	SPI_send@data
   258     0790  3003               	movlw	3
   259     0791  279B               	fcall	_SPI_send
   260                           
   261                           ;MAX7219_main.c: 57: SPI_send(0x04,0x83);
   262     0792  3083               	movlw	131
   263     0793  00F0               	movwf	SPI_send@data
   264     0794  3004               	movlw	4
   265     0795  279B               	fcall	_SPI_send
   266                           
   267                           ;MAX7219_main.c: 58: SPI_send(0x05,0x82);
   268     0796  3082               	movlw	130
   269     0797  00F0               	movwf	SPI_send@data
   270     0798  3005               	movlw	5
   271     0799  279B               	fcall	_SPI_send
   272     079A                     l15:	
   273                           ;MAX7219_main.c: 61: while(1){
   274                           
   275     079A  2F9A               	goto	l15
   276     079B                     __end_of_main:
   277                           
   278                           	psect	text1
   279     079B                     __ptext1:	
   280 ;; *************** function _SPI_send *****************
   281 ;; Defined at:
   282 ;;		line 66 in file "MAX7219_main.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;  addr            1    wreg     unsigned char 
   285 ;;  data            1    0[COMMON] unsigned char 
   286 ;; Auto vars:     Size  Location     Type
   287 ;;  addr            1    2[COMMON] unsigned char 
   288 ;;  i               2    3[COMMON] int 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, btemp+1
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 100/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1
   298 ;;      Params:         1       0       0
   299 ;;      Locals:         3       0       0
   300 ;;      Temps:          1       0       0
   301 ;;      Totals:         5       0       0
   302 ;;Total ram usage:        5 bytes
   303 ;; Hardware stack levels used: 1
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311     079B                     _SPI_send:	
   312                           ;psect for function _SPI_send
   313                           
   314                           
   315                           ;incstack = 0
   316                           ; Regs used in _SPI_send: [wreg+status,2+status,0+btemp+1]
   317                           ;SPI_send@addr stored from wreg
   318     079B  00F2               	movwf	SPI_send@addr
   319                           
   320                           ;MAX7219_main.c: 67: int i;;MAX7219_main.c: 68: PORTCbits.RC1 = 0;
   321     079C  1283               	bcf	3,5	;RP0=0, select bank0
   322     079D  1087               	bcf	7,1	;volatile
   323                           
   324                           ;MAX7219_main.c: 69: for (i=0; i<8; i++){
   325     079E  01F3               	clrf	SPI_send@i
   326     079F  01F4               	clrf	SPI_send@i+1
   327     07A0                     l21:
   328                           
   329                           ;MAX7219_main.c: 70: PORTCbits.RC0 = 0;
   330     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   331     07A1  1007               	bcf	7,0	;volatile
   332                           
   333                           ;MAX7219_main.c: 71: _delay((unsigned long)((50)*(8000000/4000000.0)));
   334     07A2  3021               	movlw	33
   335     07A3  00F1               	movwf	??_SPI_send
   336     07A4                     u147:
   337     07A4  0BF1               	decfsz	??_SPI_send,f
   338     07A5  2FA4               	goto	u147
   339                           
   340                           ;MAX7219_main.c: 72: PORTCbits.RC2 = (addr & 0b10000000) ? 1:0 ;
   341     07A6  1FF2               	btfss	SPI_send@addr,7
   342     07A7  2FAB               	goto	u70
   343     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   344     07A9  1507               	bsf	7,2	;volatile
   345     07AA  2FAD               	goto	u84
   346     07AB                     u70:
   347     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   348     07AC  1107               	bcf	7,2	;volatile
   349     07AD                     u84:
   350                           
   351                           ;MAX7219_main.c: 73: _delay((unsigned long)((50)*(8000000/4000000.0)));
   352     07AD  3021               	movlw	33
   353     07AE  00F1               	movwf	??_SPI_send
   354     07AF                     u157:
   355     07AF  0BF1               	decfsz	??_SPI_send,f
   356     07B0  2FAF               	goto	u157
   357                           
   358                           ;MAX7219_main.c: 74: PORTCbits.RC0 = 1;
   359     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   360     07B2  1407               	bsf	7,0	;volatile
   361                           
   362                           ;MAX7219_main.c: 75: _delay((unsigned long)((50)*(8000000/4000000.0)));
   363     07B3  3021               	movlw	33
   364     07B4  00F1               	movwf	??_SPI_send
   365     07B5                     u167:
   366     07B5  0BF1               	decfsz	??_SPI_send,f
   367     07B6  2FB5               	goto	u167
   368                           
   369                           ;MAX7219_main.c: 76: addr = addr << 1;
   370     07B7  0872               	movf	SPI_send@addr,w
   371     07B8  00F1               	movwf	??_SPI_send
   372     07B9  0771               	addwf	??_SPI_send,w
   373     07BA  00F2               	movwf	SPI_send@addr
   374     07BB  3001               	movlw	1
   375     07BC  07F3               	addwf	SPI_send@i,f
   376     07BD  1803               	skipnc
   377     07BE  0AF4               	incf	SPI_send@i+1,f
   378     07BF  3000               	movlw	0
   379     07C0  07F4               	addwf	SPI_send@i+1,f
   380     07C1  0874               	movf	SPI_send@i+1,w
   381     07C2  3A80               	xorlw	128
   382     07C3  00FF               	movwf	127
   383     07C4  3080               	movlw	128
   384     07C5  027F               	subwf	127,w
   385     07C6  1D03               	skipz
   386     07C7  2FCA               	goto	u95
   387     07C8  3008               	movlw	8
   388     07C9  0273               	subwf	SPI_send@i,w
   389     07CA                     u95:
   390     07CA  1C03               	skipc
   391     07CB  2FA0               	goto	l21
   392                           
   393                           ;MAX7219_main.c: 77: };MAX7219_main.c: 78: for (i=0; i<8; i++){
   394     07CC  01F3               	clrf	SPI_send@i
   395     07CD  01F4               	clrf	SPI_send@i+1
   396     07CE                     l23:
   397                           
   398                           ;MAX7219_main.c: 79: PORTCbits.RC0 = 0;
   399     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   400     07CF  1007               	bcf	7,0	;volatile
   401                           
   402                           ;MAX7219_main.c: 80: _delay((unsigned long)((50)*(8000000/4000000.0)));
   403     07D0  3021               	movlw	33
   404     07D1  00F1               	movwf	??_SPI_send
   405     07D2                     u177:
   406     07D2  0BF1               	decfsz	??_SPI_send,f
   407     07D3  2FD2               	goto	u177
   408                           
   409                           ;MAX7219_main.c: 81: PORTCbits.RC2 = (data & 0b10000000) ? 1:0 ;
   410     07D4  1FF0               	btfss	SPI_send@data,7
   411     07D5  2FD9               	goto	u100
   412     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   413     07D7  1507               	bsf	7,2	;volatile
   414     07D8  2FDB               	goto	u114
   415     07D9                     u100:
   416     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   417     07DA  1107               	bcf	7,2	;volatile
   418     07DB                     u114:
   419                           
   420                           ;MAX7219_main.c: 82: _delay((unsigned long)((50)*(8000000/4000000.0)));
   421     07DB  3021               	movlw	33
   422     07DC  00F1               	movwf	??_SPI_send
   423     07DD                     u187:
   424     07DD  0BF1               	decfsz	??_SPI_send,f
   425     07DE  2FDD               	goto	u187
   426                           
   427                           ;MAX7219_main.c: 83: PORTCbits.RC0 = 1;
   428     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   429     07E0  1407               	bsf	7,0	;volatile
   430                           
   431                           ;MAX7219_main.c: 84: _delay((unsigned long)((50)*(8000000/4000000.0)));
   432     07E1  3021               	movlw	33
   433     07E2  00F1               	movwf	??_SPI_send
   434     07E3                     u197:
   435     07E3  0BF1               	decfsz	??_SPI_send,f
   436     07E4  2FE3               	goto	u197
   437                           
   438                           ;MAX7219_main.c: 85: data = data << 1;
   439     07E5  0870               	movf	SPI_send@data,w
   440     07E6  00F1               	movwf	??_SPI_send
   441     07E7  0771               	addwf	??_SPI_send,w
   442     07E8  00F0               	movwf	SPI_send@data
   443     07E9  3001               	movlw	1
   444     07EA  07F3               	addwf	SPI_send@i,f
   445     07EB  1803               	skipnc
   446     07EC  0AF4               	incf	SPI_send@i+1,f
   447     07ED  3000               	movlw	0
   448     07EE  07F4               	addwf	SPI_send@i+1,f
   449     07EF  0874               	movf	SPI_send@i+1,w
   450     07F0  3A80               	xorlw	128
   451     07F1  00FF               	movwf	127
   452     07F2  3080               	movlw	128
   453     07F3  027F               	subwf	127,w
   454     07F4  1D03               	skipz
   455     07F5  2FF8               	goto	u125
   456     07F6  3008               	movlw	8
   457     07F7  0273               	subwf	SPI_send@i,w
   458     07F8                     u125:
   459     07F8  1C03               	skipc
   460     07F9  2FCE               	goto	l23
   461                           
   462                           ;MAX7219_main.c: 86: };MAX7219_main.c: 87: PORTCbits.RC0 = 0;
   463     07FA  1283               	bcf	3,5	;RP0=0, select bank0
   464     07FB  1007               	bcf	7,0	;volatile
   465                           
   466                           ;MAX7219_main.c: 88: PORTCbits.RC1 = 1;
   467     07FC  1487               	bsf	7,1	;volatile
   468     07FD  0008               	return
   469     07FE                     __end_of_SPI_send:
   470     007E                     btemp	set	126	;btemp
   471     007E                     wtemp0	set	126
   472                           
   473                           	psect	config
   474                           
   475                           ;Config register CONFIG @ 0x2007
   476                           ;	Oscillator Selection bits
   477                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
   478                           ;	Watchdog Timer Enable bit
   479                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   480                           ;	Power-up Timer Enable bit
   481                           ;	PWRTE = OFF, PWRT disabled
   482                           ;	MCLR Pin Function Select bit
   483                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   484                           ;	Code Protection bit
   485                           ;	CP = OFF, Program memory code protection is disabled
   486                           ;	Internal Oscillator Frequency Select bit
   487                           ;	IOSCFS = 8MHZ, 8 MHz
   488                           ;	Brown-out Reset Selection bits
   489                           ;	BOREN = OFF, BOR Disabled
   490     2007                     	org	8199
   491     2007  3CD4               	dw	15572

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     612
                                              5 COMMON     3     3      0
                           _SPI_send
 ---------------------------------------------------------------------------------
 (1) _SPI_send                                             5     4      1     612
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BANK1               20      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jul 15 17:43:35 2023

                     l21 07A0                       l23 07CE                       l15 079A  
                     u70 07AB                       u84 07AD                       u95 07CA  
                    u100 07D9                      u114 07DB                      u125 07F8  
                    u137 076D                      u147 07A4                      u157 07AF  
                    u167 07B5                      u177 07D2                      u187 07DD  
                    u197 07E3                     _main 075E                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0091  
       __end_of_SPI_send 07FE                    status 0003                    wtemp0 007E  
        __initialization 07FE             __end_of_main 079B                   ??_main 0075  
__end_of__initialization 07FE           __pcstackCOMMON 0070             SPI_send@addr 0072  
           SPI_send@data 0070                ?_SPI_send 0070               __pmaintext 075E  
             ??_SPI_send 0071                SPI_send@i 0073                  __ptext1 079B  
   end_of_initialization 07FE                _PORTCbits 0007                _TRISCbits 0087  
    start_initialization 07FE                ___latbits 0000                 _SPI_send 079B  
